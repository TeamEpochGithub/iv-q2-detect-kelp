defaults:
  - pipeline/default@_here_
  - _self_

feature_pipeline:
  processed_path: data/processed
  transformation_pipeline:
    transformations:
      - _target_: src.pipeline.model.feature.transformation.set_outside_range.SetOutsideRange
        nan_to_zero: True
        nan_value: -32768

  column_pipeline:
    columns:

      # NDVI
      - _target_: src.pipeline.model.feature.column.column_block.ColumnBlockPipeline
        column_block:
          _target_: src.pipeline.model.feature.column.norm_diff.NormDiff
          a: 1
          b: 2
        cache_block:
          _target_: src.pipeline.caching.column.CacheColumnBlock
          data_path: data/processed/cache
          column: -1
      - _target_: src.pipeline.model.feature.column.column_block.ColumnBlockPipeline
        column_block:
          _target_: src.pipeline.model.feature.column.norm_diff.NormDiff
          a: 3
          b: 1
        cache_block:
          _target_: src.pipeline.caching.column.CacheColumnBlock
          data_path: data/processed/cache
          column: -1
      - _target_: src.pipeline.model.feature.column.column_block.ColumnBlockPipeline
        column_block:
          _target_: src.pipeline.model.feature.column.offset.Offset
          band: 1
        cache_block:
          _target_: src.pipeline.caching.column.CacheColumnBlock
          data_path: data/processed/cache
          column: -1
      - _target_: src.pipeline.model.feature.column.column_block.ColumnBlockPipeline
        column_block:
          _target_: src.pipeline.model.feature.column.offset_diff.OffsetDiff
          a: 1
          b: 2
        cache_block:
          _target_: src.pipeline.caching.column.CacheColumnBlock
          data_path: data/processed/cache
          column: -1
      - _target_: src.pipeline.model.feature.column.column_block.ColumnBlockPipeline
        column_block:
          _target_: src.pipeline.model.feature.column.norm_diff.NormDiff
          a: 3
          b: 0
        cache_block:
          _target_: src.pipeline.caching.column.CacheColumnBlock
          data_path: data/processed/cache
          column: -1
      - _target_: src.pipeline.model.feature.column.column_block.ColumnBlockPipeline
        column_block:
          _target_: src.pipeline.model.feature.column.shore.Shore
          mode: closeness
        cache_block:
          _target_: src.pipeline.caching.column.CacheColumnBlock
          data_path: data/processed/cache
          column: -1
      - _target_: src.pipeline.model.feature.column.column_block.ColumnBlockPipeline
        column_block:
          _target_: src.pipeline.model.feature.column.filter.Filter
          filters:
          - _target_: functools.partial
            _args_:
            - _target_: hydra.utils.get_method
              path: dask_image.ndfilters.sobel
          channels:
          - 7
        cache_block:
          _target_: src.pipeline.caching.column.CacheColumnBlock
          data_path: data/processed/cache
          column: -1

target_pipeline:
  processed_path: data/processed/target
  transformation_pipeline:
    transformations:
      - _target_: src.pipeline.model.feature.transformation.gaussian_blur.GaussianBlur
        sigma: 0.5
  column_pipeline:
    columns: [ ]

model_loop_pipeline:
  pretrain_pipeline:
    pretrain_steps:
      - _target_: src.pipeline.model.model_loop.pretrain.gbdt.GBDT
        model_type: XGBoost
        max_images: 424242
        early_stopping_split: 0.2
      - _target_: src.pipeline.model.model_loop.pretrain.column_selection.ColumnSelection
        columns:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
      - _target_: src.pipeline.model.model_loop.pretrain.scaler_block.ScalerBlock
        scaler:
          _target_: dask_ml.preprocessing.StandardScaler

  model_blocks_pipeline:
    model_blocks:
      # Pytorch model
      - _target_: src.pipeline.model.model_loop.model_blocks.torch_block.TorchBlock
        model:
          _target_: src.pipeline.model.architectures.padded_model.PaddedModel
          padding: 1
          model: # from segmentation_models_pytorch import Unet
            _target_: src.modules.models.swin.res_swin_v2.Res_Swin
            img_size: 352
            channels: 13
            window_size: 11
        optimizer: # Partially instantiate optimizer, so model parameters can be linked at runtime
          _target_: functools.partial
          _args_:
            - _target_: hydra.utils.get_class
              path: torch.optim.Adam
          lr: 0.00003
        scheduler:
          _target_: functools.partial
          _args_:
            - _target_: hydra.utils.get_class
              path: timm.scheduler.cosine_lr.CosineLRScheduler
          t_initial: 60
          cycle_mul: 1
          cycle_decay: 1
          cycle_limit: 1
          warmup_t: 5
          warmup_lr_init: 1e-5
        criterion:
          _target_: src.modules.loss.dice_loss.DiceLoss
          multiply_kelp: False
        epochs: 75
        batch_size: 32
        patience: 15
        transformations:
          _target_: src.augmentations.transformations.Transformations
          korn:
            _target_: kornia.augmentation.AugmentationSequential
            _args_:
              - _target_: kornia.augmentation.RandomHorizontalFlip
                p: 0.5
              - _target_: kornia.augmentation.RandomVerticalFlip
                p: 0.5
              - _target_: kornia.augmentation.AugmentationSequential
                random_apply: 1
                _args_:
                - _target_: kornia.augmentation.RandomRotation
                  p: 0.25
                  degrees: [90,90]
                - _target_: kornia.augmentation.RandomRotation
                  p: 0.25
                  degrees: [180,180]
                - _target_: kornia.augmentation.RandomRotation
                  p: 0.25
                  degrees: [270,270]
                - _target_: kornia.augmentation.Resize # acts as a no-op
                  p: 0.25
                  size:
                    - 350
                    - 350
              - _target_: kornia.augmentation.AugmentationSequential
                random_apply: 1
                _args_:
                - _target_: kornia.augmentation.RandomMosaic
                  p: 0.1
                  output_size: [350,350]
                - _target_: kornia.augmentation.RandomCutMixV2
                  p: 0.1
                - _target_: kornia.augmentation.Resize # acts as a no-op
                  p: 0.8
                  size:
                    - 350
                    - 350


post_processing_pipeline:
  post_processing_steps:
  - _target_: src.pipeline.model.post_processing.threshold.Threshold
